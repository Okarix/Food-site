{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,4DAA4D;AAC5D,yCAAyC;AACzC,oBAAoB;AACpB;AACA;AACA,gCAAgC;AAChC;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2DAA2D;AAC3D,8DAA8D;AAC9D;AACA,mCAAmC;AACnC,oDAAoD;AACpD,2DAA2D;AAC3D,kEAAkE;AAClE;AACA,kBAAkB,OAAO;AACzB,uDAAuD;AACvD;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,iBAAiB;AACjB;AACA,qDAAqD;AACrD;AACA,6BAA6B;AAC7B,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,wDAAwD;AACxD;AACA,gDAAgD;AAChD;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;AChHgC;AACnD;AACA;AACA,qBAAqB;AACrB,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,kEAAkE;AAClE,gCAAgC;AAChC,gCAAgC;AAChC;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,mBAAmB;AACnB,2DAA2D;AAC3D;AACA,6CAA6C;AAC7C,6CAA6C;AAC7C,qDAAqD;AACrD,cAAc,OAAO;AACrB,qFAAqF;AACrF;AACA;AACA;AACA,2BAA2B,UAAU,MAAM,UAAU;AACrD,kDAAkD,WAAW;AAC7D,gDAAgD,UAAU;AAC1D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA,eAAe;AACf,yCAAyC;AACzC;AACA;AACA;AACA;AACA,IAAI,+DAAW;AACf;AACA,4BAA4B,kCAAkC,OAAO;AACrE;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,oCAAoC,kCAAkC,OAAO;AAC7E;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC5D4B;AACA;AAChD;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK,GAAG;AACR;AACA,kCAAkC;AAClC,iDAAiD;AACjD,gCAAgC;AAChC;AACA,iEAAiE;AACjE,iDAAiD;AACjD;AACA;AACA;AACA,eAAe;AACf,mEAAmE;AACnE;AACA,iDAAiD;AACjD;AACA,iFAAiF;AACjF;AACA,YAAY,4DAAQ;AACpB;AACA;AACA,uDAAuD;AACvD,4CAA4C;AAC5C,iBAAiB;AACjB,sDAAsD;AACtD,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB;AACjB,SAAS;AACT;AACA;AACA,wCAAwC;AACxC,0EAA0E;AAC1E;AACA,+CAA+C;AAC/C,QAAQ,iDAAS,0BAA0B;AAC3C;AACA,2DAA2D;AAC3D,oDAAoD;AACpD;AACA;AACA,4DAA4D;AAC5D,4CAA4C,QAAQ;AACpD;AACA,WAAW;AACX;AACA,8DAA8D;AAC9D,2BAA2B;AAC3B,kCAAkC;AAClC,mDAAmD;AACnD,sDAAsD;AACtD,YAAY,kDAAU,YAAY;AAClC,SAAS;AACT;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACtEpB;AACA,yDAAyD;AACzD;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,qCAAqC;AACrC,yDAAyD;AACzD;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,+BAA+B;AAC/B;AACA,KAAK;AACL;AACA,6CAA6C;AAC7C,+EAA+E;AAC/E;AACA;AACA,KAAK;AACL;AACA,kDAAkD;AAClD,uEAAuE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,0DAA0D;AAC1D;AACA;AACA,iEAAe,KAAK,EAAC;AACC;AACD;;;;;;;;;;;;;;;ACpDrB,kBAAkB,kEAAkE;AACpF;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA,wBAAwB;AACxB;AACA,4BAA4B;AAC5B;AACA,8BAA8B;AAC9B,gCAAgC,cAAc;AAC9C,MAAM,OAAO;AACb;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,SAAS;AACT;AACA,uDAAuD;AACvD;AACA;AACA;AACA,kCAAkC;AAClC,sCAAsC,WAAW;AACjD,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,KAAK;AACL;AACA,2CAA2C;AAC3C;AACA,KAAK;AACL;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;ACxDrB;AACA;AACA;AACA,iEAAiE;AACjE;AACA,gCAAgC;AAChC,sCAAsC;AACtC;AACA;AACA,SAAS;AACT;AACA,+BAA+B;AAC/B,gDAAgD;AAChD,SAAS;AACT;AACA;AACA,qCAAqC;AACrC;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,qBAAqB;AACrB,sBAAsB;AACtB;AACA,sDAAsD;AACtD,qCAAqC;AACrC;AACA,0EAA0E;AAC1E,wCAAwC;AACxC,uCAAuC;AACvC,qCAAqC;AACrC,uCAAuC;AACvC;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;ACvCnB;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;ACtDpB,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,6BAA6B;AAC7B;AACA;AACA,qCAAqC;AACrC,kCAAkC;AAClC;AACA,mBAAmB;AACnB,2CAA2C,IAAI,YAAY,WAAW;AACtE;AACA;AACA;AACA;AACA;AACoB;;;;;;;UCvBpB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNkC;AACE;AACE;AACF;AACF;AACE;AACA;AACQ;AAC5C;AACA;AACA;AACA;AACA;AACA,QAAQ,yDAAS;AACjB,KAAK,UAAU;AACf;AACA,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,0DAAK;AACT,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,CAAC,E","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/services/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\r\n    const result = document.querySelector('.calculating__result span'); // получаем результат(та часть где выводятся калории)\r\n\r\n    let sex, ratio, height, age, weight;\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n\r\n\r\n    function calcTotal() { // считающая функция \r\n        if (!sex || !height || !age || !weight || !ratio) { // проверка если ничего не задано\r\n            result.textContent = '____'; // выводится это\r\n            return; // эта часть останавливается\r\n        }\r\n\r\n        if (sex === 'female') { // для женщин\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else { // для мужчин\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal(); // вызываем\r\n\r\n    function getStaticInformation(selector, activeClass) { // функция по получению статической информации(пол и активность)\r\n        const elements = document.querySelectorAll(selector); // получаем родительский див(делегирование событий)\r\n\r\n        elements.forEach(elem => { // перебираем наши элементы\r\n            elem.addEventListener('click', (e) => { // навешиваем обработчик на каждый элемент \r\n                if (e.target.getAttribute('data-ratio')) { // если элемент на которой кликнули равен дата атрибуту активности\r\n                    ratio = +e.target.getAttribute('data-ratio'); // то записываем значение этого атрибута в соответствующую переменную\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else { // если нет(значит мы кликаем на выбор пола)\r\n                    sex = e.target.getAttribute('id'); // присваиваем значение из айди \r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n\r\n                elements.forEach(elem => { // перебираем все элементы и убираем класс активности\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n\r\n                e.target.classList.add(activeClass); // добавляем класс активности на кликнутый элемент\r\n\r\n                calcTotal(); // вызываем функцию чтобы фиксировала изменения \r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getDynamicInformation(selector) { // получение инфы с динамических элементов(рост вес возраст)\r\n        const input = document.querySelector(selector); // получаем инпут \r\n\r\n        input.addEventListener('input', () => { // вешаем обработчик с инпутом\r\n\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch (input.getAttribute('id')) { // получаем айди инпута\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n            calcTotal(); // вызываем функцию чтобы фиксировала изменения \r\n        });\r\n    }\r\n\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n}\r\n\r\nexport default calc;","import { getResource } from \"../services/services\";\r\n\r\nfunction cards() {\r\n    class MenuCard { // создаем наш класс\r\n        constructor(src, alt, title, text, price, parentSelector, ...classes) { // конструируем его(добавляем аргументы смотря на верстку карточек на страницу, так же добавляем родителя куда будет пушиться наша карточка)\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.text = text;\r\n            this.price = price;\r\n            this.classes = classes; // наши классы через rest будут передаваться в виде массива\r\n            this.parent = document.querySelector(parentSelector); // получаем нашего родителя(он будет в DOM структуре  у него будет будет доступен метод append, наши классы передадим в моменте создания экземпляра объекта)\r\n            this.transfer = 27; // наш \"курс валюты\"\r\n            this.changeToUAH(); // вызываем метод который конвертирует нашу валюту в гривны\r\n        }\r\n\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer; // метод по конвертированию валюты\r\n        }\r\n\r\n        render() { // метод который рендерит нашу верстку \r\n            const element = document.createElement('div'); // создаем нашу карточку\r\n\r\n            if (this.classes.length === 0) { // проверка на пустоту массиву(то есть если ничего не будет передано, то элемент примет значение по умолчанию)\r\n                this.classes = 'menu__item'; // наш класс по умолчанию который будет принимать наш элемент\r\n                element.classList.add(this.classes); // добавляем этот класс нашему элементу\r\n            } else { // если будут переданы классы\r\n                this.classes.forEach(className => element.classList.add(className)); // проходимся по каждому классу и добавляем его к нашему элементу\r\n            }\r\n\r\n            element.innerHTML = ` \r\n                <img src=${this.src} alt=${this.alt} />\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.text}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n            `; // создаем верстку и туда вкладываем наши свойства\r\n            this.parent.append(element); // добавляем наш элемент в конец родителя\r\n        }\r\n    }\r\n\r\n\r\n    getResource('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.forEach(({ img, altimg, title, descr, price }) => { // деструктуризация объекта\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n            });\r\n        });\r\n\r\n    // axios.get('http://localhost:3000/menu')\r\n    //     .then(data => {\r\n    //         data.data.forEach(({ img, altimg, title, descr, price }) => { // деструктуризация объекта\r\n    //             new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n    //         });\r\n    //     });\r\n}\r\n\r\nexport default cards;","import { closeModal, openModal } from \"./modal\";\r\nimport { postData } from \"../services/services\";\r\n\r\nfunction forms(formSelector, modalTimerId) {\r\n    const forms = document.querySelectorAll(formSelector); // получаем все формы по тегу form\r\n\r\n    const message = {\r\n        loading: 'img/form/spinner.svg', // путь к нашей картинке загрузки\r\n        success: 'Спасибо! Скоро мы с вами свяжемся',\r\n        failure: 'Что-то пошло не так...'\r\n    }; // объект который содержит список фраз для разных статусов загрузки запроса \r\n\r\n    forms.forEach(item => {\r\n        bindPostData(item);\r\n    }); // перебираем наши формы и подвязываем к каждой из них функцию \r\n\r\n    function bindPostData(form) { // функция которая отвечает за привязку отправки данных\r\n        form.addEventListener('submit', (e) => { // улавливаем наш обработчик submit(это событие отправки, когда мы нажимаем на кнопку отправить)\r\n            e.preventDefault(); // это команда идет первой в AJAX запросах, чтобы не было перезагрузки страницы\r\n\r\n            const statusMessage = document.createElement('img'); // создаем div с ответом(где будет выводится сообщение о статусе)\r\n            statusMessage.src = message.loading; // в путь нашего тега img подставляем путь из объекта\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `; // задаем inline стиль прямо здесь\r\n            form.insertAdjacentElement('afterend', statusMessage); // добавляем наш элемент после конца формы\r\n\r\n            const formData = new FormData(form); // создаем специальный объект formData который позволяет с определенной формы данные записать в видео объекта \r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries())); // элегантный способ преобразить объект formData в json\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n                .then(data => {\r\n                    console.log(data);\r\n                    showThanksModal(message.success);  // в аргументе сообщение из нашего объекта \r\n                    statusMessage.remove(); // удаляем сообщение о статусе\r\n                }).catch(() => {\r\n                    showThanksModal(message.failure); // в аргументе сообщение из нашего объекта \r\n                }).finally(() => {\r\n                    form.reset(); // сбрасываем нашу форму\r\n                });\r\n        });\r\n    }\r\n\r\n    function showThanksModal(message) { // функцию по созданию блока с сообщением после отправки данных\r\n        const prevModalDialog = document.querySelector('.modal__dialog'); // получаем наш modal dialog класс с размерами формы\r\n\r\n        prevModalDialog.classList.add('hide'); // скрываем нашу форму заполнения данных\r\n        openModal('.modal', modalTimerId); // открываем модальное окно\r\n\r\n        const thanksModal = document.createElement('div'); // создаем окно с сообщением статусом\r\n        thanksModal.classList.add('modal__dialog'); // добавляем класс modal dialog\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>&times;</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `; // собираем верстку \r\n\r\n        document.querySelector('.modal').append(thanksModal); // добавляем на страницу \r\n        setTimeout(() => { // ставим таймаут с определенными действиями\r\n            thanksModal.remove(); // удаляем наше окно\r\n            prevModalDialog.classList.add('show'); // показываем предыдущее окно\r\n            prevModalDialog.classList.remove('hide'); // удаляем класс скрытия\r\n            closeModal('.modal'); // закрываем окно\r\n        }, 4000);\r\n    }\r\n}\r\n\r\nexport default forms;","function openModal(modalSelector, modalTimerId) {\r\n    const modal = document.querySelector(modalSelector); // получаем само модальное окно\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden'; // отмена прокрутки при открытии модального окна\r\n\r\n    console.log(modalTimerId);\r\n    if (modalTimerId) {\r\n        clearInterval(modalTimerId); // если пользователь сам открыл окно то таймер останавливается \r\n    }\r\n}\r\n\r\nfunction closeModal(modalSelector) { // так как этот скрипт будет повторяться несколько раз выносим его в отдельную функцию \r\n    const modal = document.querySelector(modalSelector); // получаем само модальное окно\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    document.body.style.overflow = ''; // если в оверфлоу будет пустая строка то оно примет начальное значение, т.е. можно будет снова прокручивать  страницу\r\n}\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\r\n\r\n    const modalOpen = document.querySelectorAll(triggerSelector), // получаем триггер открытия окна(кнопка) по дата атрибуту\r\n        modal = document.querySelector(modalSelector); // получаем само модальное окно\r\n\r\n    modalOpen.forEach(btn => { // навешиваем обработчик на несколько кнопок для открытия \r\n        btn.addEventListener('click', () => openModal(modalSelector, modalTimerId));\r\n    });\r\n\r\n    modal.addEventListener('click', (e) => { // функция закрытия окна при нажатии на подложку \r\n        if (e.target === modal || e.target.getAttribute('data-close') == '') { // если наш объект клика равен modal то окно закроется \r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n    document.addEventListener('keydown', (e) => { // функция закрытия окна при помощи ESCAPE\r\n        if (e.code === 'Escape' && modal.classList.contains('show')) { // при помощи e.code можно получить тип события нажатия\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n    function showModalByScroll() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1) {\r\n            openModal(modalSelector, modalTimerId);\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    } // функция открытия окна при пролистывании страницы к концу\r\n\r\n    window.addEventListener('scroll', showModalByScroll); // навешиваем на окно скролл и функцию\r\n}\r\n\r\nexport default modal;\r\nexport { closeModal };\r\nexport { openModal };\r\n","function slider({ slide, nextArrow, prevArrow, totalCounter, currentCounter, field }) {\r\n    const slides = document.querySelectorAll(slide), // количество слайдов которые есть на странице\r\n        prev = document.querySelector(prevArrow), // кнопка назад\r\n        next = document.querySelector(nextArrow), // кнопка вперед\r\n        current = document.querySelector(currentCounter), // получаем указатель нашего слайда на странице\r\n        total = document.querySelector(totalCounter); // получаем указатель общего количества слайдов на странице\r\n\r\n    let slideIndex = 1; // наш индекс для слайдов(он равен одному а не 0 так как будет выводится для показа на страницу)\r\n\r\n    showSlides(slideIndex); // вызываем функцию показа слайдов и передаем туда индекс\r\n\r\n    if (slides.length < 10) { // если всего слайдов меньше десяти по списку то, к индексу спереди добавляется ноль к общему количеству\r\n        total.textContent = `0${slides.length}`;\r\n    } else { // если же больше, то без нуля\r\n        total.textContent = slides.length;\r\n    }\r\n\r\n    function showSlides(n) {\r\n        if (n > slides.length) { // если слайдер выйдет за границы(например 4 слайда) мы будем листать дальше, то он вернется к 1 слайду\r\n            slideIndex = 1;\r\n        }\r\n\r\n        if (n < 1) { // если слайдер выйдет за границы единицы, то значение равно последнему слайду\r\n            slideIndex = slides.length;\r\n        }\r\n\r\n        slides.forEach(item => { // скрываем все слайды\r\n            item.classList.add('hide');\r\n            item.classList.remove('show');\r\n        });\r\n\r\n        slides[slideIndex - 1].classList.add('show');  // показываем наш нужный слайд(-1 так как счет с 0 в прог)\r\n        slides[slideIndex - 1].classList.remove('hide');\r\n\r\n\r\n        if (slides.length < 10) { // если наш слайд меньше десяти по списку то, к индексу спереди добавляется ноль\r\n            current.textContent = `0${slideIndex}`;\r\n        } else { // обратная \r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n    }\r\n\r\n    function plusSLides(n) { // функция по перелистыванию слайдера\r\n        showSlides(slideIndex += n);\r\n    }\r\n\r\n    prev.addEventListener('click', () => { // назад\r\n        plusSLides(-1);\r\n    });\r\n\r\n    next.addEventListener('click', () => { // вперед\r\n        plusSLides(1);\r\n    });\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n    const tabs = document.querySelectorAll(tabsSelector), // получаем нашы табы(кнопочки на которые кликаем)\r\n        tabsContent = document.querySelectorAll(tabsContentSelector), // получаем контент табов(картинки и надписи)\r\n        tabsParent = document.querySelector(tabsParentSelector); // получаем оболочку всех табов(родителя) \r\n\r\n    function hideTabContent() { // функция скрывающая ненужные табы\r\n        tabsContent.forEach(item => { // перебираем все табы в псевдомассиве \r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(item => { // перебираем все кнопки табы\r\n            item.classList.remove(activeClass); // удаляем с этих кнопок класс активности(эффект наведения на кнопку)\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) { // функция показывающая нужный контент\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add(activeClass); // добавляем класс активности на первую кнопку таба\r\n    }\r\n\r\n    hideTabContent();// вызываем функцию скрытия \r\n    showTabContent(); // вызываем функцию показа\r\n\r\n    tabsParent.addEventListener('click', (event) => { // используем делегирование событий(на родителя табов навешиваем обработчик событий)\r\n        const target = event.target; // наш элемент на котором производится событие записываем в переменную\r\n\r\n        if (target && target.classList.contains(tabsSelector.slice(1))) { // определяем то что мы точно кликнули в таб\r\n            tabs.forEach((item, i) => { // перебираем все табы(записываем аргументы(наш элемент и его индекс))\r\n                if (target === item) { // если наш элемент на котором происходит событие равен нашему элементу в псевдомассиве(т.е. нашей нажимаемой кнопке(табу))\r\n                    hideTabContent();// вызываем функцию скрытия \r\n                    showTabContent(i); // вызываем функцию показа в аргументах с индексом того элемента на котором происходит событие\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport default tabs;","function timer(id, deadline) {\r\n\r\n    function getTimeDifference(endtime) { // функция которая определяет разницу между дедлайном и нашим текущим временем \r\n        const t = Date.parse(endtime) - Date.parse(new Date()), // получаем разницу в миллисекундах(дедлайн минус наше время)\r\n            days = Math.floor(t / (1000 * 60 * 60 * 24)), // получаем дни(нужно разделить количество миллисекунд с разницы на миллисекунды в одном дне)\r\n            hours = Math.floor(t / (1000 * 60 * 60) % 24), // получаем часы(нужно разделить количество миллисекунд с разницы на миллисекунды в одном часе)\r\n            minutes = Math.floor((t / 1000 / 60) % 60), // минуты\r\n            seconds = Math.floor((t / 1000) % 60); // секунды\r\n\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        }; // возвращаем объект со всеми значениями \r\n    }\r\n\r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) { // функция которая устанавливает наши часы на страницу\r\n        const timer = document.querySelector(selector);\r\n        const days = document.querySelector('#days');\r\n        const hours = document.querySelector('#hours');\r\n        const minutes = document.querySelector('#minutes');\r\n        const seconds = document.querySelector('#seconds');\r\n        const timeInterval = setInterval(updateClock, 1000); // запускает наш таймер каждую секунду\r\n\r\n        updateClock();\r\n\r\n        function updateClock() { // обновляет наш таймер каждую секунду\r\n            const t = getTimeDifference(endtime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setClock(id, deadline);\r\n}\r\n\r\nexport default timer;","const postData = async (url, data) => { // функция которая отправляет данные\r\n    // Так как fetch работает асинхронно, мы не знаем через сколько вернутся данные\r\n    const res = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: data\r\n    });\r\n\r\n    return await res.json(); // обрабатываем из формата json\r\n};\r\n\r\nconst getResource = async (url) => { // функция получения данных с сервера\r\n    const res = await fetch(url); // запрос на сервер\r\n\r\n    if (!res.ok) { // если будет ошибка в http запросе, то выведет в консоль\r\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n};\r\n\r\nexport { postData };\r\nexport { getResource };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from './modules/tabs';\r\nimport modal from './modules/modal';\r\nimport slider from './modules/slider';\r\nimport cards from './modules/cards';\r\nimport calc from './modules/calc';\r\nimport timer from './modules/timer';\r\nimport forms from './modules/forms';\r\nimport { openModal } from './modules/modal';\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const modalTimerId = setTimeout(() => {\r\n        openModal('.modal', modalTimerId);\r\n    }, 50000); // устанавливаем таймоут для окна\r\n\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    modal('[data-modal]', '.modal', modalTimerId);\r\n    slider({\r\n        slide: '.offer__slide',\r\n        nextArrow: '.offer__slider-next',\r\n        prevArrow: '.offer__slider-prev',\r\n        currentCounter: '#current',\r\n        totalCounter: '#total'\r\n    });\r\n    cards();\r\n    calc();\r\n    timer('.timer', '2023-01-30');\r\n    forms('form', modalTimerId);\r\n});"],"names":[],"sourceRoot":""}